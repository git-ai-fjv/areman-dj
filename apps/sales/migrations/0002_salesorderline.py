# Generated by Django 5.2.5 on 2025-08-24 11:38

import django.core.validators
import django.db.models.deletion
import django.db.models.functions.datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('catalog', '0018_alter_productvariant_organization_and_more'),
        ('core', '0002_organization'),
        ('sales', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SalesOrderLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_no', models.SmallIntegerField()),
                ('qty', models.DecimalField(decimal_places=3, max_digits=12, validators=[django.core.validators.MinValueValidator(0.001)])),
                ('price_at_order', models.DecimalField(decimal_places=4, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('note', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('updated_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sales_order_lines', to='core.organization')),
                ('sales_order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sales_order_lines', to='sales.salesorder')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sales_order_lines', to='catalog.productvariant')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('organization', 'sales_order', 'row_no'), name='uniq_sol_org_so_row'), models.CheckConstraint(condition=models.Q(('qty__gt', 0)), name='ck_sol_qty_pos'), models.CheckConstraint(condition=models.Q(('price_at_order__gte', 0)), name='ck_sol_price_nn')],
            },
        ),
    ]
