# Generated by Django 5.2.5 on 2025-08-24 10:57

import django.core.validators
import django.db.models.deletion
import django.db.models.functions.datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('catalog', '0012_alter_productmedia_table_alter_productvariant_table'),
        ('core', '0002_organization'),
        ('pricing', '0003_pricelist_channelpricelist_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='pricegroup',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='price_groups', to='core.organization'),
        ),
        migrations.CreateModel(
            name='ProductVariantPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=4, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('valid_from', models.DateTimeField()),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('updated_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_variant_prices', to='core.organization')),
                ('price_list', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_variant_prices', to='pricing.pricelist')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_variant_prices', to='catalog.productvariant')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('variant', 'price_list', 'valid_from'), name='uniq_price_variant_pricelist_from'), models.CheckConstraint(condition=models.Q(('amount__gte', 0)), name='ck_price_amount_nonneg')],
            },
        ),
    ]
