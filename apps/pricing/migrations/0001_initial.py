# Generated by Django 5.2.5 on 2025-08-27 07:58

import django.core.validators
import django.db.models.deletion
import django.db.models.functions.datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0001_initial'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PriceList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_list_code', models.CharField(max_length=20)),
                ('price_list_description', models.CharField(max_length=200)),
                ('kind', models.CharField(max_length=1)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('updated_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='price_lists', to='core.currency')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='price_lists', to='core.organization')),
            ],
        ),
        migrations.CreateModel(
            name='SalesChannelVariantPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_from', models.DateTimeField()),
                ('price', models.DecimalField(decimal_places=4, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('need_update', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('updated_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('channel_variant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sales_channel_variant_prices', to='catalog.channelvariant')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sales_channel_variant_prices', to='core.organization')),
                ('price_list', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sales_channel_variant_prices', to='pricing.pricelist')),
            ],
        ),
        migrations.CreateModel(
            name='TaxClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('rate', models.DecimalField(decimal_places=4, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('created_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('updated_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
            ],
            options={
                'db_table': 'tax_class',
                'indexes': [models.Index(fields=['rate'], name='idx_tax_class_rate')],
                'constraints': [models.CheckConstraint(condition=models.Q(('rate__gte', 0), ('rate__lte', 1)), name='ck_tax_class_rate')],
            },
        ),
        migrations.CreateModel(
            name='CurrencyRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.DecimalField(decimal_places=8, max_digits=16, validators=[django.core.validators.MinValueValidator(1e-08)])),
                ('rate_date', models.DateField()),
                ('created_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('updated_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('base', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='base_rates', to='core.currency')),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='quote_rates', to='core.currency')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('base', 'quote', 'rate_date'), name='uniq_currency_rate'), models.CheckConstraint(condition=models.Q(('rate__gt', 0)), name='ck_currency_rate_positive')],
            },
        ),
        migrations.CreateModel(
            name='PriceGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_group_code', models.CharField(help_text='Price group code (unique within organization).', max_length=20)),
                ('price_group_description', models.CharField(blank=True, help_text='Optional description/name of the price group.', max_length=200)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='price_groups', to='core.organization')),
            ],
            options={
                'verbose_name': 'Price Group',
                'verbose_name_plural': 'Price Groups',
                'constraints': [models.UniqueConstraint(fields=('organization', 'price_group_code'), name='uniq_price_group_org_code')],
            },
        ),
        migrations.AddConstraint(
            model_name='pricelist',
            constraint=models.UniqueConstraint(fields=('organization', 'price_list_code'), name='uniq_price_list_org_code'),
        ),
        migrations.AddConstraint(
            model_name='pricelist',
            constraint=models.UniqueConstraint(fields=('organization', 'id'), name='uniq_price_list_org_id'),
        ),
        migrations.AddConstraint(
            model_name='pricelist',
            constraint=models.CheckConstraint(condition=models.Q(('kind__in', ['S', 'P'])), name='ck_price_list_kind'),
        ),
        migrations.AddConstraint(
            model_name='saleschannelvariantprice',
            constraint=models.UniqueConstraint(fields=('organization', 'price_list', 'channel_variant', 'valid_from'), name='uniq_channel_var_price_valid'),
        ),
        migrations.AddConstraint(
            model_name='saleschannelvariantprice',
            constraint=models.CheckConstraint(condition=models.Q(('price__gte', 0)), name='ck_price_price_nonneg'),
        ),
    ]
