# Generated by Django 5.2.5 on 2025-08-27 07:45

import apps.catalog.models.product
import django.db.models.deletion
import django.db.models.functions.datetime
import django.db.models.functions.text
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('manufacturer_code', models.SmallIntegerField(help_text='Business code for the manufacturer (small integer).', primary_key=True, serialize=False)),
                ('manufacturer_description', models.CharField(blank=True, help_text='Optional description/name of the manufacturer.', max_length=200)),
            ],
            options={
                'verbose_name': 'Manufacturer',
                'verbose_name_plural': 'Manufacturers',
            },
        ),
        migrations.CreateModel(
            name='Origin',
            fields=[
                ('origin_code', models.CharField(help_text='Single-letter origin code.', max_length=1, primary_key=True, serialize=False)),
                ('origin_description', models.CharField(blank=True, help_text='Optional description/name of the origin.', max_length=100)),
            ],
            options={
                'verbose_name': 'Origin',
                'verbose_name_plural': 'Origins',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('state_code', models.CharField(help_text='Single-letter state code.', max_length=1, primary_key=True, serialize=False)),
                ('state_description', models.CharField(blank=True, help_text='Optional description/name of the state.', max_length=100)),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'States',
            },
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('channel_code', models.CharField(max_length=20)),
                ('channel_name', models.CharField(max_length=200)),
                ('kind', models.CharField(default='shop', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('updated_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('base_currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='channels', to='core.currency')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='channels', to='core.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Packing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('packing_code', models.SmallIntegerField()),
                ('amount', models.DecimalField(decimal_places=3, default=Decimal('1.000'), help_text='Multiplier amount for this packing unit.', max_digits=10, null=True)),
                ('packing_short_description', models.CharField(max_length=20)),
                ('packing_description', models.CharField(blank=True, max_length=200, null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='packings', to='core.organization')),
            ],
        ),
        migrations.CreateModel(
            name='ProductGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_group_code', models.CharField(help_text='Product group code (unique within organization).', max_length=20)),
                ('product_group_description', models.CharField(blank=True, help_text='Optional description/name of the product group.', max_length=200)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_groups', to='core.organization')),
            ],
            options={
                'verbose_name': 'Product Group',
                'verbose_name_plural': 'Product Groups',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.CharField(max_length=200)),
                ('manufacturer_part_number', models.CharField(max_length=100)),
                ('manufacturer_part_number_norm', models.GeneratedField(db_persist=True, expression=apps.catalog.models.product.RegexpReplace(apps.catalog.models.product.RegexpReplace(apps.catalog.models.product.RegexpReplace(apps.catalog.models.product.RegexpReplace(apps.catalog.models.product.RegexpReplace(django.db.models.functions.text.Lower(models.F('manufacturer_part_number')), models.Value('[ßẞ]'), models.Value('ss'), models.Value('g')), models.Value('ä'), models.Value('ae'), models.Value('g')), models.Value('ö'), models.Value('oe'), models.Value('g')), models.Value('ü'), models.Value('ue'), models.Value('g')), models.Value('[^0-9a-z]+'), models.Value(''), models.Value('g')), output_field=models.CharField(max_length=100))),
                ('description', models.TextField(blank=True, help_text='Full product description (rich text / HTML).', null=True)),
                ('meta_title', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('keywords', models.CharField(blank=True, max_length=500, null=True)),
                ('is_new', models.BooleanField(default=False)),
                ('is_closeout', models.BooleanField(default=False)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('updated_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='catalog.manufacturer')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='core.organization')),
                ('product_group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.productgroup')),
            ],
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=120)),
                ('ean', models.CharField(blank=True, db_index=True, help_text='Standardized GTIN/EAN code (8, 12, 13, or 14 digits).', max_length=14, null=True)),
                ('barcode', models.CharField(blank=True, help_text='Non-standard or supplier-specific barcode (may be alphanumeric).', max_length=64, null=True)),
                ('customs_code', models.IntegerField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('width', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('length', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('eclass_code', models.CharField(blank=True, help_text='International eCl@ss classification code (e.g. 44070702).', max_length=16, null=True)),
                ('stock_quantity', models.IntegerField(blank=True, null=True)),
                ('available_stock', models.IntegerField(blank=True, null=True)),
                ('is_available', models.BooleanField(default=False, help_text='Availability flag as provided by supplier API.')),
                ('shipping_free', models.BooleanField(default=False)),
                ('min_purchase', models.IntegerField(default=1)),
                ('max_purchase', models.IntegerField(blank=True, null=True)),
                ('purchase_steps', models.IntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('updated_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_variants', to='core.organization')),
                ('origin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_variants', to='catalog.origin')),
                ('packing', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_variants', to='catalog.packing')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_variants', to='catalog.product')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_variants', to='catalog.state')),
            ],
        ),
        migrations.CreateModel(
            name='ProductMedia',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('role', models.CharField(default='gallery', max_length=20)),
                ('sort_order', models.SmallIntegerField(default=0)),
                ('alt_text', models.CharField(blank=True, default='', max_length=200)),
                ('media_url', models.TextField()),
                ('mime', models.CharField(blank=True, max_length=100, null=True)),
                ('width_px', models.IntegerField(blank=True, null=True)),
                ('height_px', models.IntegerField(blank=True, null=True)),
                ('file_size', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('updated_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products_media', to='core.organization')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products_media', to='catalog.product')),
                ('variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='products_media', to='catalog.productvariant')),
            ],
        ),
        migrations.CreateModel(
            name='ChannelVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('need_shop_update', models.BooleanField(default=False)),
                ('shop_product_id', models.CharField(blank=True, max_length=100, null=True)),
                ('shop_variant_id', models.CharField(blank=True, max_length=100, null=True)),
                ('last_synced_at', models.DateTimeField(blank=True, null=True)),
                ('last_error', models.TextField(blank=True, null=True)),
                ('meta_json', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('updated_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='channel_variants', to='catalog.channel')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='channel_variants', to='core.organization')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='channel_variants', to='catalog.productvariant')),
            ],
        ),
        migrations.AddConstraint(
            model_name='channel',
            constraint=models.UniqueConstraint(fields=('organization', 'channel_code'), name='uniq_channel_org_code'),
        ),
        migrations.AddConstraint(
            model_name='channel',
            constraint=models.UniqueConstraint(fields=('organization', 'id'), name='uniq_channel_org_id'),
        ),
        migrations.AddConstraint(
            model_name='packing',
            constraint=models.UniqueConstraint(fields=('organization', 'packing_code'), name='uniq_packing_packing_code_org_code'),
        ),
        migrations.AddConstraint(
            model_name='productgroup',
            constraint=models.UniqueConstraint(fields=('organization', 'product_group_code'), name='uniq_product_group_org_item_group_code'),
        ),
        migrations.AddConstraint(
            model_name='productgroup',
            constraint=models.UniqueConstraint(fields=('organization', 'id'), name='uniq_product_group_org_id'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.UniqueConstraint(fields=('organization', 'slug'), name='uniq_product_org_slug'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.UniqueConstraint(fields=('organization', 'manufacturer', 'manufacturer_part_number_norm'), name='uniq_product_org_manu_mpn_norm'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.UniqueConstraint(fields=('organization', 'id'), name='uniq_product_org_id'),
        ),
        migrations.AddIndex(
            model_name='productmedia',
            index=models.Index(fields=['organization'], name='idx_product_media_org'),
        ),
        migrations.AddIndex(
            model_name='productmedia',
            index=models.Index(fields=['product'], name='idx_product_media_product'),
        ),
        migrations.AddIndex(
            model_name='productmedia',
            index=models.Index(fields=['variant'], name='idx_product_media_variant'),
        ),
        migrations.AddIndex(
            model_name='productmedia',
            index=models.Index(fields=['role', 'sort_order'], name='idx_product_media_role_order'),
        ),
        migrations.AddIndex(
            model_name='productmedia',
            index=models.Index(fields=['is_active'], name='idx_product_media_active'),
        ),
        migrations.AddConstraint(
            model_name='channelvariant',
            constraint=models.UniqueConstraint(fields=('organization', 'channel', 'variant'), name='uniq_channel_variant'),
        ),
        migrations.AddConstraint(
            model_name='productvariant',
            constraint=models.CheckConstraint(condition=models.Q(('weight__gte', 0)), name='ck_variant_weight_nonneg'),
        ),
        migrations.AddConstraint(
            model_name='productvariant',
            constraint=models.UniqueConstraint(fields=('organization', 'sku'), name='uniq_variant_org_sku'),
        ),
        migrations.AddConstraint(
            model_name='productvariant',
            constraint=models.UniqueConstraint(fields=('organization', 'id'), name='uniq_variant_org_id'),
        ),
        migrations.AddConstraint(
            model_name='productvariant',
            constraint=models.UniqueConstraint(fields=('organization', 'product', 'packing', 'origin', 'state'), name='uniq_variant_org_product_pack_origin_state'),
        ),
    ]
