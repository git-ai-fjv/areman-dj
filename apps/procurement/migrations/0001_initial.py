# Generated by Django 5.2.5 on 2025-08-24 11:22

import django.core.validators
import django.db.models.deletion
import django.db.models.functions.datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0018_alter_productvariant_organization_and_more'),
        ('core', '0002_organization'),
        ('partners', '0002_supplier'),
    ]

    operations = [
        migrations.CreateModel(
            name='SupplierProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_sku', models.CharField(max_length=100)),
                ('pack_size', models.DecimalField(decimal_places=3, default=1, max_digits=10, validators=[django.core.validators.MinValueValidator(0.001)])),
                ('min_order_qty', models.DecimalField(decimal_places=3, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('lead_time_days', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('updated_at', models.DateTimeField(db_default=django.db.models.functions.datetime.Now(), editable=False)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplier_products', to='core.organization')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplier_products', to='partners.supplier')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplier_products', to='catalog.productvariant')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('organization', 'variant', 'supplier'), name='uniq_spp_supplier_sku'), models.CheckConstraint(condition=models.Q(('pack_size__gt', 0)), name='ck_spp_pack_pos'), models.CheckConstraint(condition=models.Q(('min_order_qty__gte', 0)), name='ck_spp_moq_nonneg'), models.CheckConstraint(condition=models.Q(('lead_time_days__gte', 0)), name='ck_spp_lead_nonneg')],
            },
        ),
    ]
